<?xml version="1.0"?>
<launch>

	<!-- arguments -->
	<arg name="domain_path"	default="/home/jonas/master_ws/src/initialization/domain.pddl" />
	<arg name="problem_path"	default="/home/jonas/master_ws/src/initialization/problem.pddl" />
	
	<!-- Text to speech --> 
	<include file="$(find tts)/launch/tts_polly.launch"/>

	<!-- Rosplan Reactions --> 
	<include file="$(find spontaneous_rosplan_reactions)/launch/reactions.launch"/>
  	<node name="tts_interface" pkg="naoqi_interface" type="tts_interface.py" />

	<!-- Naoqi interface -->
	<!-- <include file="$(find naoqi_interface)/launch/robot_interface.launch"/> -->

	<!-- knowledge base -->
	<node name="rosplan_knowledge_base" pkg="rosplan_knowledge_base" type="knowledgeBase" respawn="false" output="screen">
		<param name="domain_path" value="$(arg domain_path)" />
		<param name="problem_path" value="$(arg problem_path)" />
		<param name="database_path" value="$(find rosplan_knowledge_base)/common/mongoDB/" />
		<!-- conditional planning flags -->
		<param name="use_unknowns" value="false" />
	</node>

	<!-- problem generation -->
	<include file="$(find rosplan_planning_system)/launch/includes/problem_interface.launch">
		<arg name="knowledge_base"   value="rosplan_knowledge_base" />
		<arg name="domain_path"      value="$(arg domain_path)" />
		<arg name="problem_topic"    value="problem_instance" />
	</include>
	
	<!-- scene database (MongoDB) -->
	<include file="$(find mongodb_store)/launch/mongodb_store.launch">
		<arg name="db_path" value="$(find rosplan_knowledge_base)/common/mongoDB/"/>
	</include>

	<!-- planner interface -->
	<include file="$(find rosplan_planning_system)/launch/includes/planner_interface.launch">
		<arg name="use_problem_topic"    value="true" />
		<arg name="problem_topic"        value="/rosplan_problem_interface/problem_instance" />
		<arg name="planner_topic"        value="/planner_output" />
		<arg name="domain_path"          value="$(arg domain_path)" />
		<arg name="problem_path"         value="$(arg problem_path)" />
		<arg name="planner_command"      value="timeout 10 $(find rosplan_planning_system)/common/bin/popf $(arg domain_path) $(arg problem_path)" />
	</include>
	
	<!-- plan parsing -->
	<node name="rosplan_parsing_interface" pkg="rosplan_planning_system" type="pddl_simple_plan_parser" respawn="false" output="screen">
		<param name="knowledge_base" value="rosplan_knowledge_base" />
		<param name="planner_topic"  value="/planner_output" />
		<param name="plan_topic"     value="/complete_plan" />
	</node>

	<!-- plan dispatching -->
	<node name="rosplan_plan_dispatcher" pkg="rosplan_planning_system" type="pddl_simple_plan_dispatcher" respawn="false" output="screen">
		<param name="knowledge_base"        value="rosplan_knowledge_base" />
		<param name="plan_topic"            value="/complete_plan" />
		<param name="action_dispatch_topic" value="action_dispatch" />
		<param name="action_feedback_topic" value="action_feedback" />
	</node>
	
	<!-- Task generating services	-->	
	<include file="$(find task_generating_services)/launch/task_generating_services.launch" />

        <!-- Recorder and recognizer -->
	<include file="$(find sound_analyzers)/launch/recorders_and_recognisers.launch" />
        
	<!-- KnowledgeDeriving -->
	<include file="$(find knowledge_deriving)/launch/knowledge_deriving.launch" />

</launch>
